{"key.results": [{"key.sourcetext": "#column", "key.name": "#column", "key.context": "source.codecompletion.context.none", "key.typename": "Int", "key.kind": "source.lang.swift.keyword", "key.description": "#column", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "#dsohandle", "key.name": "#dsohandle", "key.context": "source.codecompletion.context.none", "key.typename": "UnsafeMutablePointer<Void>", "key.kind": "source.lang.swift.keyword", "key.description": "#dsohandle", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "#file", "key.name": "#file", "key.context": "source.codecompletion.context.none", "key.typename": "String", "key.kind": "source.lang.swift.keyword", "key.description": "#file", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "#function", "key.name": "#function", "key.context": "source.codecompletion.context.none", "key.typename": "String", "key.kind": "source.lang.swift.keyword", "key.description": "#function", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "#line", "key.name": "#line", "key.context": "source.codecompletion.context.none", "key.typename": "Int", "key.kind": "source.lang.swift.keyword", "key.description": "#line", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "abs(<#T##x: T##T#>)", "key.doc.brief": "Returns the absolute value of x.", "key.name": "abs(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3absuRxs12SignedNumberrFxx", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "abs(x: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AbsoluteValuable", "key.doc.brief": "A type that supports an \"absolute value\" function.", "key.name": "AbsoluteValuable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps16AbsoluteValuable", "key.typename": "AbsoluteValuable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "AbsoluteValuable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "alignof(<#T##T.Type#>)", "key.doc.brief": "Returns the minimum memory alignment of T.", "key.name": "alignof()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs7alignofurFMxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "alignof(T.Type)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "alignofValue(<#T##T#>)", "key.doc.brief": "Returns the minimum memory alignment of T.", "key.name": "alignofValue()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs12alignofValueurFxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "alignofValue(T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Any", "key.doc.brief": "The protocol to which all types implicitly conform.", "key.name": "Any", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s3Any", "key.typename": "protocol<>", "key.kind": "source.lang.swift.decl.typealias", "key.description": "Any", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyBidirectionalCollection", "key.doc.brief": "A type-erased wrapper over any collection with indices that support bidirectional traversal.", "key.name": "AnyBidirectionalCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs26AnyBidirectionalCollection", "key.typename": "AnyBidirectionalCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyBidirectionalCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyBidirectionalIndex", "key.doc.brief": "A wrapper over an underlying BidirectionalIndex that hides the specific underlying type.", "key.name": "AnyBidirectionalIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs21AnyBidirectionalIndex", "key.typename": "AnyBidirectionalIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyBidirectionalIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyClass", "key.doc.brief": "The protocol to which all class types implicitly conform.", "key.name": "AnyClass", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s8AnyClass", "key.typename": "AnyObject.Type", "key.kind": "source.lang.swift.decl.typealias", "key.description": "AnyClass", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyCollectionProtocol", "key.doc.brief": "A protocol for AnyForwardCollection<Element>, AnyBidirectionalCollection<Element>, and AnyRandomAccessCollection<Element>.", "key.name": "AnyCollectionProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps21AnyCollectionProtocol", "key.typename": "AnyCollectionProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "AnyCollectionProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyForwardCollection", "key.doc.brief": "A type-erased wrapper over any collection with indices that support forward traversal.", "key.name": "AnyForwardCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs20AnyForwardCollection", "key.typename": "AnyForwardCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyForwardCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyForwardIndex", "key.doc.brief": "A wrapper over an underlying ForwardIndex that hides the specific underlying type.", "key.name": "AnyForwardIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15AnyForwardIndex", "key.typename": "AnyForwardIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyForwardIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyIterator", "key.doc.brief": "A type-erased iterator of Element.", "key.name": "AnyIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs11AnyIterator", "key.typename": "AnyIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyObject", "key.doc.brief": "The protocol to which all classes implicitly conform.", "key.name": "AnyObject", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps9AnyObject", "key.typename": "AnyObject", "key.kind": "source.lang.swift.decl.protocol", "key.description": "AnyObject", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyRandomAccessCollection", "key.doc.brief": "A type-erased wrapper over any collection with indices that support random access traversal.", "key.name": "AnyRandomAccessCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs25AnyRandomAccessCollection", "key.typename": "AnyRandomAccessCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyRandomAccessCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnyRandomAccessIndex", "key.doc.brief": "A wrapper over an underlying RandomAccessIndex that hides the specific underlying type.", "key.name": "AnyRandomAccessIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs20AnyRandomAccessIndex", "key.typename": "AnyRandomAccessIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnyRandomAccessIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "AnySequence", "key.doc.brief": "A type-erased sequence.", "key.name": "AnySequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs11AnySequence", "key.typename": "AnySequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "AnySequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Array", "key.doc.brief": "Array is an efficient, tail-growable random-access collection of arbitrary elements.", "key.name": "Array", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sa", "key.typename": "Array", "key.kind": "source.lang.swift.decl.struct", "key.description": "Array", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ArrayLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with array literals.", "key.name": "ArrayLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps23ArrayLiteralConvertible", "key.typename": "ArrayLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "ArrayLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ArraySlice", "key.doc.brief": "The Array-like type that represents a sub-sequence of any Array, ContiguousArray, or other ArraySlice.", "key.name": "ArraySlice", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs10ArraySlice", "key.typename": "ArraySlice", "key.kind": "source.lang.swift.decl.struct", "key.description": "ArraySlice", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "assert(<#T##condition: Bool##Bool#>)", "key.doc.brief": "Traditional C-style assert with an optional message.", "key.name": "assert(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs6assertFTKT_SbKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "assert(condition: Bool)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "assert(<#T##condition: Bool##Bool#>, <#T##message: String##String#>)", "key.doc.brief": "Traditional C-style assert with an optional message.", "key.name": "assert(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs6assertFTKT_SbKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "assert(condition: Bool, message: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "assertionFailure()", "key.doc.brief": "Indicate that an internal sanity check failed.", "key.name": "assertionFailure()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs16assertionFailureFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "assertionFailure()", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "assertionFailure(<#T##message: String##String#>)", "key.doc.brief": "Indicate that an internal sanity check failed.", "key.name": "assertionFailure(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs16assertionFailureFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "assertionFailure(message: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "associatedtype", "key.name": "associatedtype", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "associatedtype", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "AutoreleasingUnsafeMutablePointer", "key.doc.brief": "A mutable pointer-to-ObjC-pointer argument.", "key.name": "AutoreleasingUnsafeMutablePointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs33AutoreleasingUnsafeMutablePointer", "key.typename": "AutoreleasingUnsafeMutablePointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "AutoreleasingUnsafeMutablePointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "BidirectionalIndex", "key.doc.brief": "An index that can step backwards via application of its predecessor() method.", "key.name": "BidirectionalIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps18BidirectionalIndex", "key.typename": "BidirectionalIndex", "key.kind": "source.lang.swift.decl.protocol", "key.description": "BidirectionalIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "BitwiseOperations", "key.doc.brief": "A set type with O(1) standard bitwise operators.", "key.name": "BitwiseOperations", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps17BitwiseOperations", "key.typename": "BitwiseOperations", "key.kind": "source.lang.swift.decl.protocol", "key.description": "BitwiseOperations", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Bool", "key.doc.brief": "A value type whose instances are either true or false.", "key.name": "Bool", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sb", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.struct", "key.description": "Bool", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Boolean", "key.doc.brief": "A type that represents a Boolean value.", "key.name": "Boolean", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps7Boolean", "key.typename": "Boolean", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Boolean", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "BooleanLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with the Boolean literals true and false.", "key.name": "BooleanLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps25BooleanLiteralConvertible", "key.typename": "BooleanLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "BooleanLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "BooleanLiteralType", "key.doc.brief": "The default type for an otherwise-unconstrained Boolean literal.", "key.name": "BooleanLiteralType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s18BooleanLiteralType", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.typealias", "key.description": "BooleanLiteralType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "break", "key.name": "break", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "break", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "case", "key.name": "case", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "case", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "catch", "key.name": "catch", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "catch", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "CBool", "key.doc.brief": "The C '_Bool' and C++ 'bool' type.", "key.name": "CBool", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s5CBool", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CBool", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CChar", "key.doc.brief": "The C 'char' type.", "key.name": "CChar", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s5CChar", "key.typename": "Int8", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CChar", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CChar16", "key.doc.brief": "The C++11 'char16_t' type, which has UTF-16 encoding.", "key.name": "CChar16", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7CChar16", "key.typename": "UInt16", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CChar16", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CChar32", "key.doc.brief": "The C++11 'char32_t' type, which has UTF-32 encoding.", "key.name": "CChar32", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7CChar32", "key.typename": "UnicodeScalar", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CChar32", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CDouble", "key.doc.brief": "The C 'double' type.", "key.name": "CDouble", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7CDouble", "key.typename": "Double", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CDouble", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CFloat", "key.doc.brief": "The C 'float' type.", "key.name": "CFloat", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s6CFloat", "key.typename": "Float", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CFloat", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Character", "key.doc.brief": "Character represents some Unicode grapheme cluster as defined by a canonical, localized, or otherwise tailored segmentation algorithm.", "key.name": "Character", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs9Character", "key.typename": "Character", "key.kind": "source.lang.swift.decl.struct", "key.description": "Character", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CInt", "key.doc.brief": "The C 'int' type.", "key.name": "CInt", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s4CInt", "key.typename": "Int32", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CInt", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "class", "key.name": "class", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "class", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "CLong", "key.doc.brief": "The C 'long' type.", "key.name": "CLong", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s5CLong", "key.typename": "Int", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CLong", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CLongLong", "key.doc.brief": "The C 'long long' type.", "key.name": "CLongLong", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s9CLongLong", "key.typename": "Int64", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CLongLong", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ClosedInterval", "key.doc.brief": "A closed Interval, which contains both its start and its end.  Cannot represent an empty interval.", "key.name": "ClosedInterval", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs14ClosedInterval", "key.typename": "ClosedInterval", "key.kind": "source.lang.swift.decl.struct", "key.description": "ClosedInterval", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Collection", "key.doc.brief": "A multi-pass sequence with addressable positions.", "key.name": "Collection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10Collection", "key.typename": "Collection", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Collection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CollectionOfOne", "key.doc.brief": "A collection containing a single element of type Element.", "key.name": "CollectionOfOne", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15CollectionOfOne", "key.typename": "CollectionOfOne", "key.kind": "source.lang.swift.decl.struct", "key.description": "CollectionOfOne", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Comparable", "key.doc.brief": "Instances of conforming types can be compared using relational operators, which define a strict total order.", "key.name": "Comparable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10Comparable", "key.typename": "Comparable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Comparable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ContiguousArray", "key.doc.brief": "A fast, contiguously-stored array of Element.", "key.name": "ContiguousArray", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15ContiguousArray", "key.typename": "ContiguousArray", "key.kind": "source.lang.swift.decl.struct", "key.description": "ContiguousArray", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "continue", "key.name": "continue", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "continue", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "convenience", "key.name": "convenience", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "convenience", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "CShort", "key.doc.brief": "The C 'short' type.", "key.name": "CShort", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s6CShort", "key.typename": "Int16", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CShort", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CSignedChar", "key.doc.brief": "The C 'signed char' type.", "key.name": "CSignedChar", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s11CSignedChar", "key.typename": "Int8", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CSignedChar", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CUnsignedChar", "key.doc.brief": "The C 'unsigned char' type.", "key.name": "CUnsignedChar", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s13CUnsignedChar", "key.typename": "UInt8", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CUnsignedChar", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CUnsignedInt", "key.doc.brief": "The C 'unsigned int' type.", "key.name": "CUnsignedInt", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s12CUnsignedInt", "key.typename": "UInt32", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CUnsignedInt", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CUnsignedLong", "key.doc.brief": "The C 'unsigned long' type.", "key.name": "CUnsignedLong", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s13CUnsignedLong", "key.typename": "UInt", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CUnsignedLong", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CUnsignedLongLong", "key.doc.brief": "The C 'unsigned long long' type.", "key.name": "CUnsignedLongLong", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s17CUnsignedLongLong", "key.typename": "UInt64", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CUnsignedLongLong", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CUnsignedShort", "key.doc.brief": "The C 'unsigned short' type.", "key.name": "CUnsignedShort", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s14CUnsignedShort", "key.typename": "UInt16", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CUnsignedShort", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CustomDebugStringConvertible", "key.doc.brief": "A type with a customized textual representation suitable for debugging purposes.", "key.name": "CustomDebugStringConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps28CustomDebugStringConvertible", "key.typename": "CustomDebugStringConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CustomDebugStringConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CustomLeafReflectable", "key.doc.brief": "A type that explicitly supplies its own Mirror but whose descendant classes are not represented in the Mirror unless they also override customMirror.", "key.name": "CustomLeafReflectable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps21CustomLeafReflectable", "key.typename": "CustomLeafReflectable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CustomLeafReflectable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CustomPlaygroundQuickLookable", "key.doc.brief": "A type that explicitly supplies its own PlaygroundQuickLook.", "key.name": "CustomPlaygroundQuickLookable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps29CustomPlaygroundQuickLookable", "key.typename": "CustomPlaygroundQuickLookable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CustomPlaygroundQuickLookable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CustomReflectable", "key.doc.brief": "A type that explicitly supplies its own Mirror.", "key.name": "CustomReflectable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps17CustomReflectable", "key.typename": "CustomReflectable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CustomReflectable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CustomStringConvertible", "key.doc.brief": "A type with a customized textual representation.", "key.name": "CustomStringConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps23CustomStringConvertible", "key.typename": "CustomStringConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CustomStringConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CVaListPointer", "key.doc.brief": "The corresponding Swift type to va_list in imported C APIs.", "key.name": "CVaListPointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs14CVaListPointer", "key.typename": "CVaListPointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "CVaListPointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CVarArg", "key.doc.brief": "Instances of conforming types can be encoded, and appropriately passed, as elements of a C va_list.", "key.name": "CVarArg", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps7CVarArg", "key.typename": "CVarArg", "key.kind": "source.lang.swift.decl.protocol", "key.description": "CVarArg", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "CWideChar", "key.doc.brief": "The C++ 'wchar_t' type.", "key.name": "CWideChar", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s9CWideChar", "key.typename": "UnicodeScalar", "key.kind": "source.lang.swift.decl.typealias", "key.description": "CWideChar", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "debugPrint(<#T##items: Any...##Any#>)", "key.doc.brief": "Writes the textual representations of items most suitable for debugging, separated by separator and terminated by terminator, into the standard output.", "key.name": "debugPrint(:...)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10debugPrintFTGSaP__9separatorSS10terminatorSS_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "debugPrint(items: Any...)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "debugPrint(<#T##items: Any...##Any#>, separator: <#T##String#>, terminator: <#T##String#>)", "key.doc.brief": "Writes the textual representations of items most suitable for debugging, separated by separator and terminated by terminator, into the standard output.", "key.name": "debugPrint(:...separator:terminator:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10debugPrintFTGSaP__9separatorSS10terminatorSS_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "debugPrint(items: Any..., separator: String, terminator: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "debugPrint(<#T##items: Any...##Any#>, separator: <#T##String#>, terminator: <#T##String#>, to: &<#T##Target#>)", "key.doc.brief": "Writes the textual representations of items most suitable for debugging, separated by separator and terminated by terminator, into output.", "key.name": "debugPrint(:...separator:terminator:to:&)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10debugPrintuRxs12OutputStreamrFTGSaP__9separatorSS10terminatorSS2toRx_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "debugPrint(items: Any..., separator: String, terminator: String, to: &Target)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "debugPrint(<#T##items: Any...##Any#>, to: &<#T##Target#>)", "key.doc.brief": "Writes the textual representations of items most suitable for debugging, separated by separator and terminated by terminator, into output.", "key.name": "debugPrint(:...to:&)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10debugPrintuRxs12OutputStreamrFTGSaP__9separatorSS10terminatorSS2toRx_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "debugPrint(items: Any..., to: &Target)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "default", "key.name": "default", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "default", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "defer", "key.name": "defer", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "defer", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "deinit", "key.name": "deinit", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "deinit", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Dictionary", "key.doc.brief": "A mapping from Key to Value.", "key.name": "Dictionary", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs10Dictionary", "key.typename": "Dictionary", "key.kind": "source.lang.swift.decl.struct", "key.description": "Dictionary", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "DictionaryIndex", "key.doc.brief": "Used to access the key-value pairs in an instance of Dictionary<Key, Value>.", "key.name": "DictionaryIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15DictionaryIndex", "key.typename": "DictionaryIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "DictionaryIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "DictionaryIterator", "key.doc.brief": "An iterator over the members of a Dictionary<Key, Value>.", "key.name": "DictionaryIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs18DictionaryIterator", "key.typename": "DictionaryIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "DictionaryIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "DictionaryLiteral", "key.doc.brief": "Represent the ability to pass a dictionary literal in function signatures.", "key.name": "DictionaryLiteral", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs17DictionaryLiteral", "key.typename": "DictionaryLiteral", "key.kind": "source.lang.swift.decl.struct", "key.description": "DictionaryLiteral", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "DictionaryLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with dictionary literals.", "key.name": "DictionaryLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps28DictionaryLiteralConvertible", "key.typename": "DictionaryLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "DictionaryLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "do", "key.name": "do", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "do", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Double", "key.doc.brief": "A double-precision floating-point value type.", "key.name": "Double", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sd", "key.typename": "Double", "key.kind": "source.lang.swift.decl.struct", "key.description": "Double", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "dump(<#T##value: T##T#>)", "key.doc.brief": "Dump an object's contents using its mirror to standard output.", "key.name": "dump(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs4dumpurFTx4nameGSqSS_6indentSi8maxDepthSi8maxItemsSi_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "dump(value: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "dump(<#T##value: T##T#>, name: <#T##String?#>, indent: <#T##Int#>, maxDepth: <#T##Int#>, maxItems: <#T##Int#>)", "key.doc.brief": "Dump an object's contents using its mirror to standard output.", "key.name": "dump(:name:indent:maxDepth:maxItems:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs4dumpurFTx4nameGSqSS_6indentSi8maxDepthSi8maxItemsSi_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "dump(value: T, name: String?, indent: Int, maxDepth: Int, maxItems: Int)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "dump(<#T##value: T##T#>, to: &<#T##TargetStream#>)", "key.doc.brief": "Dump an object's contents using its mirror to the specified output stream.", "key.name": "dump(:to:&)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs4dumpu0_R_s12OutputStreamrFTx2toRq_4nameGSqSS_6indentSi8maxDepthSi8maxItemsSi_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "dump(value: T, to: &TargetStream)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "dump(<#T##value: T##T#>, to: &<#T##TargetStream#>, name: <#T##String?#>, indent: <#T##Int#>, maxDepth: <#T##Int#>, maxItems: <#T##Int#>)", "key.doc.brief": "Dump an object's contents using its mirror to the specified output stream.", "key.name": "dump(:to:&name:indent:maxDepth:maxItems:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs4dumpu0_R_s12OutputStreamrFTx2toRq_4nameGSqSS_6indentSi8maxDepthSi8maxItemsSi_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "dump(value: T, to: &TargetStream, name: String?, indent: Int, maxDepth: Int, maxItems: Int)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "dynamic", "key.name": "dynamic", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "dynamic", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "else", "key.name": "else", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "else", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "EmptyCollection", "key.doc.brief": "A collection whose element type is Element but that is always empty.", "key.name": "EmptyCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15EmptyCollection", "key.typename": "EmptyCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "EmptyCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "EmptyIterator", "key.doc.brief": "An iterator that never produces an element.", "key.name": "EmptyIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs13EmptyIterator", "key.typename": "EmptyIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "EmptyIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "enum", "key.name": "enum", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "enum", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "EnumeratedIterator", "key.doc.brief": "The iterator for EnumeratedSequence.  EnumeratedIterator wraps a Base iterator and yields successive Int values, starting at zero, along with the elements of the underlying Base:", "key.name": "EnumeratedIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs18EnumeratedIterator", "key.typename": "EnumeratedIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "EnumeratedIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "EnumeratedSequence", "key.doc.brief": "The type of the enumerated() property.", "key.name": "EnumeratedSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs18EnumeratedSequence", "key.typename": "EnumeratedSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "EnumeratedSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Equatable", "key.doc.brief": "Instances of conforming types can be compared for value equality using operators == and !=.", "key.name": "Equatable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps9Equatable", "key.typename": "Equatable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Equatable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ErrorProtocol", "key.doc.brief": "A type representing an error value that can be thrown.", "key.name": "ErrorProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps13ErrorProtocol", "key.typename": "ErrorProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "ErrorProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ExtendedGraphemeClusterLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with string literals containing a single Unicode extended grapheme cluster.", "key.name": "ExtendedGraphemeClusterLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps41ExtendedGraphemeClusterLiteralConvertible", "key.typename": "ExtendedGraphemeClusterLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "ExtendedGraphemeClusterLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ExtendedGraphemeClusterType", "key.doc.brief": "The default type for an otherwise-unconstrained Unicode extended grapheme cluster literal.", "key.name": "ExtendedGraphemeClusterType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s27ExtendedGraphemeClusterType", "key.typename": "String", "key.kind": "source.lang.swift.decl.typealias", "key.description": "ExtendedGraphemeClusterType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "extension", "key.name": "extension", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "extension", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "fallthrough", "key.name": "fallthrough", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "fallthrough", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "false", "key.name": "false", "key.context": "source.codecompletion.context.none", "key.typename": "Bool", "key.kind": "source.lang.swift.keyword", "key.description": "false", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "fatalError()", "key.doc.brief": "Unconditionally print a message and stop execution.", "key.name": "fatalError()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10fatalErrorFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "fatalError()", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "fatalError(<#T##message: String##String#>)", "key.doc.brief": "Unconditionally print a message and stop execution.", "key.name": "fatalError(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10fatalErrorFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "fatalError(message: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "final", "key.name": "final", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "final", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "FlattenBidirectionalCollection", "key.doc.brief": "A flattened view of a base collection-of-collections.", "key.name": "FlattenBidirectionalCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs30FlattenBidirectionalCollection", "key.typename": "FlattenBidirectionalCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenBidirectionalCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FlattenBidirectionalCollectionIndex", "key.doc.brief": "A position in a FlattenBidirectionalCollection.", "key.name": "FlattenBidirectionalCollectionIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs35FlattenBidirectionalCollectionIndex", "key.typename": "FlattenBidirectionalCollectionIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenBidirectionalCollectionIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FlattenCollection", "key.doc.brief": "A flattened view of a base collection-of-collections.", "key.name": "FlattenCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs17FlattenCollection", "key.typename": "FlattenCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FlattenCollectionIndex", "key.doc.brief": "A position in a FlattenCollection.", "key.name": "FlattenCollectionIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs22FlattenCollectionIndex", "key.typename": "FlattenCollectionIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenCollectionIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FlattenIterator", "key.doc.brief": "An iterator that produces the elements contained in each segment produced by some Base Iterator.", "key.name": "FlattenIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15FlattenIterator", "key.typename": "FlattenIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FlattenSequence", "key.doc.brief": "A sequence consisting of all the elements contained in each segment contained in some Base sequence.", "key.name": "FlattenSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15FlattenSequence", "key.typename": "FlattenSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "FlattenSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Float", "key.doc.brief": "A single-precision floating-point value type.", "key.name": "Float", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sf", "key.typename": "Float", "key.kind": "source.lang.swift.decl.struct", "key.description": "Float", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Float32", "key.doc.brief": "A 32-bit floating point type.", "key.name": "Float32", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7Float32", "key.typename": "Float", "key.kind": "source.lang.swift.decl.typealias", "key.description": "Float32", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Float64", "key.doc.brief": "A 64-bit floating point type.", "key.name": "Float64", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7Float64", "key.typename": "Double", "key.kind": "source.lang.swift.decl.typealias", "key.description": "Float64", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Float80", "key.doc.brief": "An extended-precision floating-point value type.", "key.name": "Float80", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs7Float80", "key.typename": "Float80", "key.kind": "source.lang.swift.decl.struct", "key.description": "Float80", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FloatingPoint", "key.doc.brief": "A set of common requirements for Swift's floating point types.", "key.name": "FloatingPoint", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps13FloatingPoint", "key.typename": "FloatingPoint", "key.kind": "source.lang.swift.decl.protocol", "key.description": "FloatingPoint", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FloatingPointClassification", "key.doc.brief": "The set of possible IEEE 754 \"classes\"", "key.name": "FloatingPointClassification", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Os27FloatingPointClassification", "key.typename": "FloatingPointClassification", "key.kind": "source.lang.swift.decl.enum", "key.description": "FloatingPointClassification", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FloatLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with floating point literals.", "key.name": "FloatLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps23FloatLiteralConvertible", "key.typename": "FloatLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "FloatLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "FloatLiteralType", "key.doc.brief": "The default type for an otherwise-unconstrained floating point literal.", "key.name": "FloatLiteralType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s16FloatLiteralType", "key.typename": "Double", "key.kind": "source.lang.swift.decl.typealias", "key.description": "FloatLiteralType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "for", "key.name": "for", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "for", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "ForwardIndex", "key.doc.brief": "Represents a discrete value in a series, where a value's successor, if any, is reachable by applying the value's successor() method.", "key.name": "ForwardIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps12ForwardIndex", "key.typename": "ForwardIndex", "key.kind": "source.lang.swift.decl.protocol", "key.description": "ForwardIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "func", "key.name": "func", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "func", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "getVaList(<#T##args: [CVarArg]##[CVarArg]#>)", "key.doc.brief": "Returns a CVaListPointer built from args that's backed by autoreleased storage.", "key.name": "getVaList(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs9getVaListFGSaPs7CVarArg__Vs14CVaListPointer", "key.typename": "CVaListPointer", "key.kind": "source.lang.swift.decl.function.free", "key.description": "getVaList(args: [CVarArg])", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "guard", "key.name": "guard", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "guard", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "HalfOpenInterval", "key.doc.brief": "A half-open Interval, which contains its start but not its end.  Can represent an empty interval.", "key.name": "HalfOpenInterval", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs16HalfOpenInterval", "key.typename": "HalfOpenInterval", "key.kind": "source.lang.swift.decl.struct", "key.description": "HalfOpenInterval", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Hashable", "key.doc.brief": "Instances of conforming types provide an integer hashValue and can be used as Dictionary keys.", "key.name": "Hashable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps8Hashable", "key.typename": "Hashable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Hashable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "if", "key.name": "if", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "if", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "ImplicitlyUnwrappedOptional", "key.doc.brief": "An optional type that allows implicit member access.", "key.name": "ImplicitlyUnwrappedOptional", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:SQ", "key.typename": "ImplicitlyUnwrappedOptional", "key.kind": "source.lang.swift.decl.enum", "key.description": "ImplicitlyUnwrappedOptional", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "import", "key.name": "import", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "import", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "in", "key.name": "in", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "in", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Indexable", "key.doc.brief": "A type that provides subscript access to its elements.", "key.name": "Indexable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps9Indexable", "key.typename": "Indexable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Indexable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IndexingIterator", "key.doc.brief": "The iterator used for collections that don't specify one.", "key.name": "IndexingIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs16IndexingIterator", "key.typename": "IndexingIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "IndexingIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "infix", "key.name": "infix", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "infix", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "init", "key.name": "init", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "init", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "inout", "key.name": "inout", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "inout", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Int", "key.doc.brief": "A 64-bit signed integer value type.", "key.name": "Int", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Si", "key.typename": "Int", "key.kind": "source.lang.swift.decl.struct", "key.description": "Int", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Int16", "key.doc.brief": "A 16-bit signed integer value type.", "key.name": "Int16", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5Int16", "key.typename": "Int16", "key.kind": "source.lang.swift.decl.struct", "key.description": "Int16", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Int32", "key.doc.brief": "A 32-bit signed integer value type.", "key.name": "Int32", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5Int32", "key.typename": "Int32", "key.kind": "source.lang.swift.decl.struct", "key.description": "Int32", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Int64", "key.doc.brief": "A 64-bit signed integer value type.", "key.name": "Int64", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5Int64", "key.typename": "Int64", "key.kind": "source.lang.swift.decl.struct", "key.description": "Int64", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Int8", "key.doc.brief": "An 8-bit signed integer value type.", "key.name": "Int8", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs4Int8", "key.typename": "Int8", "key.kind": "source.lang.swift.decl.struct", "key.description": "Int8", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Integer", "key.doc.brief": "A set of common requirements for Swift's integer types.", "key.name": "Integer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps7Integer", "key.typename": "Integer", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Integer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IntegerArithmetic", "key.doc.brief": "The common requirements for types that support integer arithmetic.", "key.name": "IntegerArithmetic", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps17IntegerArithmetic", "key.typename": "IntegerArithmetic", "key.kind": "source.lang.swift.decl.protocol", "key.description": "IntegerArithmetic", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IntegerLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with integer literals.", "key.name": "IntegerLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps25IntegerLiteralConvertible", "key.typename": "IntegerLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "IntegerLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IntegerLiteralType", "key.doc.brief": "The default type for an otherwise-unconstrained integer literal.", "key.name": "IntegerLiteralType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s18IntegerLiteralType", "key.typename": "Int", "key.kind": "source.lang.swift.decl.typealias", "key.description": "IntegerLiteralType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "internal", "key.name": "internal", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "internal", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Interval", "key.doc.brief": "An interval over a Comparable type.", "key.name": "Interval", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps8Interval", "key.typename": "Interval", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Interval", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IntMax", "key.doc.brief": "The largest native signed integer type.", "key.name": "IntMax", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s6IntMax", "key.typename": "Int64", "key.kind": "source.lang.swift.decl.typealias", "key.description": "IntMax", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "isUniquelyReferenced(&<#T##object: T##T#>)", "key.doc.brief": "Returns true iff object is a non-@objc class instance with a single strong reference.", "key.name": "isUniquelyReferenced(&:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs20isUniquelyReferenceduRxCs17NonObjectiveCBaserFRxSb", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.function.free", "key.description": "isUniquelyReferenced(&object: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "isUniquelyReferencedNonObjC(&<#T##object: T##T#>)", "key.doc.brief": "Returns true iff object is a non-@objc class instance with a single strong reference.", "key.name": "isUniquelyReferencedNonObjC(&:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs27isUniquelyReferencedNonObjCuRxs9AnyObjectrFRxSb", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.function.free", "key.description": "isUniquelyReferencedNonObjC(&object: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "isUniquelyReferencedNonObjC(&<#T##object: T?##T?#>)", "key.doc.brief": "Returns true iff object is a non-@objc class instance with a single strong reference.", "key.name": "isUniquelyReferencedNonObjC(&:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs27isUniquelyReferencedNonObjCuRxs9AnyObjectrFRGSqx_Sb", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.function.free", "key.description": "isUniquelyReferencedNonObjC(&object: T?)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IteratorOverOne", "key.doc.brief": "An iterator that produces one or fewer instances of Element.", "key.name": "IteratorOverOne", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15IteratorOverOne", "key.typename": "IteratorOverOne", "key.kind": "source.lang.swift.decl.struct", "key.description": "IteratorOverOne", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IteratorProtocol", "key.doc.brief": "Encapsulates iteration state and interface for iteration over a sequence.", "key.name": "IteratorProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps16IteratorProtocol", "key.typename": "IteratorProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "IteratorProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "IteratorSequence", "key.doc.brief": "A sequence built around an iterator of type Base.", "key.name": "IteratorSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs16IteratorSequence", "key.typename": "IteratorSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "IteratorSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "JoinedIterator", "key.doc.brief": "An iterator that presents the elements of the sequences traversed by Base, concatenated using a given separator.", "key.name": "JoinedIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs14JoinedIterator", "key.typename": "JoinedIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "JoinedIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "JoinedSequence", "key.doc.brief": "A sequence that presents the elements of the Base sequences concatenated using a given separator.", "key.name": "JoinedSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs14JoinedSequence", "key.typename": "JoinedSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "JoinedSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "lazy", "key.name": "lazy", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "lazy", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "LazyCollection", "key.doc.brief": "A collection containing the same elements as a Base collection, but on which some operations such as map and filter are implemented lazily.", "key.name": "LazyCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs14LazyCollection", "key.typename": "LazyCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyCollectionProtocol", "key.doc.brief": "A collection on which normally-eager operations such as map and filter are implemented lazily.", "key.name": "LazyCollectionProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps22LazyCollectionProtocol", "key.typename": "LazyCollectionProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "LazyCollectionProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyFilterCollection", "key.doc.brief": "A lazy Collection wrapper that includes the elements of an underlying collection that satisfy a predicate.", "key.name": "LazyFilterCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs20LazyFilterCollection", "key.typename": "LazyFilterCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyFilterCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyFilterIndex", "key.doc.brief": "The Index used for subscripting a LazyFilterCollection.", "key.name": "LazyFilterIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15LazyFilterIndex", "key.typename": "LazyFilterIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyFilterIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyFilterIterator", "key.doc.brief": "An iterator over the elements traversed by some base iterator that also satisfy a given predicate.", "key.name": "LazyFilterIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs18LazyFilterIterator", "key.typename": "LazyFilterIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyFilterIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyFilterSequence", "key.doc.brief": "A sequence whose elements consist of the elements of some base sequence that also satisfy a given predicate.", "key.name": "LazyFilterSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs18LazyFilterSequence", "key.typename": "LazyFilterSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyFilterSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyMapCollection", "key.doc.brief": "A Collection whose elements consist of those in a Base Collection passed through a transform function returning Element. These elements are computed lazily, each time they're read, by calling the transform function on a base element.", "key.name": "LazyMapCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs17LazyMapCollection", "key.typename": "LazyMapCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyMapCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyMapIterator", "key.doc.brief": "The IteratorProtocol used by MapSequence and MapCollection. Produces each element by passing the output of the Base IteratorProtocol through a transform function returning Element.", "key.name": "LazyMapIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15LazyMapIterator", "key.typename": "LazyMapIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyMapIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazyMapSequence", "key.doc.brief": "A Sequence whose elements consist of those in a Base Sequence passed through a transform function returning Element. These elements are computed lazily, each time they're read, by calling the transform function on a base element.", "key.name": "LazyMapSequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs15LazyMapSequence", "key.typename": "LazyMapSequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazyMapSequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazySequence", "key.doc.brief": "A sequence containing the same elements as a Base sequence, but on which some operations such as map and filter are implemented lazily.", "key.name": "LazySequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12LazySequence", "key.typename": "LazySequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "LazySequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "LazySequenceProtocol", "key.doc.brief": "A sequence on which normally-eager operations such as map and filter are implemented lazily.", "key.name": "LazySequenceProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps20LazySequenceProtocol", "key.typename": "LazySequenceProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "LazySequenceProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "let", "key.name": "let", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "let", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "ManagedBuffer", "key.doc.brief": "A class whose instances contain a property of type Value and raw storage for an array of Element, whose size is determined at instance creation.", "key.name": "ManagedBuffer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Cs13ManagedBuffer", "key.typename": "ManagedBuffer", "key.kind": "source.lang.swift.decl.class", "key.description": "ManagedBuffer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ManagedBufferPointer", "key.doc.brief": "Contains a buffer object, and provides access to an instance of Value and contiguous storage for an arbitrary number of Element instances stored in that buffer.", "key.name": "ManagedBufferPointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs20ManagedBufferPointer", "key.typename": "ManagedBufferPointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "ManagedBufferPointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ManagedProtoBuffer", "key.doc.brief": "A base class of ManagedBuffer<Value,Element>, used during instance creation.", "key.name": "ManagedProtoBuffer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Cs18ManagedProtoBuffer", "key.typename": "ManagedProtoBuffer", "key.kind": "source.lang.swift.decl.class", "key.description": "ManagedProtoBuffer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "max(<#T##x: T##T#>, <#T##y: T##T#>)", "key.doc.brief": "Returns the greater of x and y.", "key.name": "max(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3maxuRxs10ComparablerFTxx_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "max(x: T, y: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "max(<#T##x: T##T#>, <#T##y: T##T#>, <#T##z: T##T#>, <#T##rest: T...##T#>)", "key.doc.brief": "Returns the greatest argument passed.", "key.name": "max(::::...)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3maxuRxs10ComparablerFtxxxGSax__x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "max(x: T, y: T, z: T, rest: T...)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "min(<#T##x: T##T#>, <#T##y: T##T#>)", "key.doc.brief": "Returns the lesser of x and y.", "key.name": "min(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3minuRxs10ComparablerFTxx_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "min(x: T, y: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "min(<#T##x: T##T#>, <#T##y: T##T#>, <#T##z: T##T#>, <#T##rest: T...##T#>)", "key.doc.brief": "Returns the least argument passed.", "key.name": "min(::::...)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3minuRxs10ComparablerFtxxxGSax__x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "min(x: T, y: T, z: T, rest: T...)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Mirror", "key.doc.brief": "Representation of the sub-structure and optional \"display style\" of any arbitrary subject instance.", "key.name": "Mirror", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs6Mirror", "key.typename": "Mirror", "key.kind": "source.lang.swift.decl.struct", "key.description": "Mirror", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "MirrorPath", "key.doc.brief": "A protocol for legitimate arguments to Mirror's descendant method.", "key.name": "MirrorPath", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10MirrorPath", "key.typename": "MirrorPath", "key.kind": "source.lang.swift.decl.protocol", "key.description": "MirrorPath", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "MutableCollection", "key.doc.brief": "A collection that supports subscript assignment.", "key.name": "MutableCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps17MutableCollection", "key.typename": "MutableCollection", "key.kind": "source.lang.swift.decl.protocol", "key.description": "MutableCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "MutableIndexable", "key.doc.brief": "A type that supports subscript assignment to a mutable collection.", "key.name": "MutableIndexable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps16MutableIndexable", "key.typename": "MutableIndexable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "MutableIndexable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "MutableSlice", "key.doc.brief": "A view into a sub-sequence of elements of another collection.", "key.name": "MutableSlice", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12MutableSlice", "key.typename": "MutableSlice", "key.kind": "source.lang.swift.decl.struct", "key.description": "MutableSlice", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "mutating", "key.name": "mutating", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "mutating", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "nil", "key.name": "nil", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "nil", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "NilLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with nil.", "key.name": "NilLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps21NilLiteralConvertible", "key.typename": "NilLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "NilLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "nonmutating", "key.name": "nonmutating", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "nonmutating", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "NonObjectiveCBase", "key.doc.brief": "A common base class for classes that need to be non-@objc, recognizably in the type system.", "key.name": "NonObjectiveCBase", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Cs17NonObjectiveCBase", "key.typename": "NonObjectiveCBase", "key.kind": "source.lang.swift.decl.class", "key.description": "NonObjectiveCBase", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "numericCast(<#T##x: T##T#>)", "key.doc.brief": "Convert x to type U, trapping on overflow in -Onone and -O builds.", "key.name": "numericCast(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs11numericCastu0_Rxs14_SignedInteger_s15UnsignedIntegerrFxq_", "key.typename": "U", "key.kind": "source.lang.swift.decl.function.free", "key.description": "numericCast(x: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "numericCast(<#T##x: T##T#>)", "key.doc.brief": "Convert x to type U, trapping on overflow in -Onone and -O builds.", "key.name": "numericCast(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs11numericCastu0_Rxs15UnsignedInteger_s14_SignedIntegerrFxq_", "key.typename": "U", "key.kind": "source.lang.swift.decl.function.free", "key.description": "numericCast(x: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "numericCast(<#T##x: T##T#>)", "key.doc.brief": "Convert x to type U, trapping on overflow in -Onone and -O builds.", "key.name": "numericCast(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs11numericCastu0_Rxs15UnsignedInteger_S_rFxq_", "key.typename": "U", "key.kind": "source.lang.swift.decl.function.free", "key.description": "numericCast(x: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "numericCast(<#T##x: T##T#>)", "key.doc.brief": "Convert x to type U, trapping on overflow in -Onone and -O builds.", "key.name": "numericCast(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs11numericCastu0_Rxs14_SignedInteger_S_rFxq_", "key.typename": "U", "key.kind": "source.lang.swift.decl.function.free", "key.description": "numericCast(x: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ObjectIdentifier", "key.doc.brief": "A unique identifier for a class instance or metatype.", "key.name": "ObjectIdentifier", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs16ObjectIdentifier", "key.typename": "ObjectIdentifier", "key.kind": "source.lang.swift.decl.struct", "key.description": "ObjectIdentifier", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "OpaquePointer", "key.doc.brief": "A wrapper around an opaque C pointer.", "key.name": "OpaquePointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs13OpaquePointer", "key.typename": "OpaquePointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "OpaquePointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "operator", "key.name": "operator", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "operator", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Optional", "key.doc.brief": "A type that can represent either a Wrapped value or nil, the absence of a value.", "key.name": "Optional", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sq", "key.typename": "Optional", "key.kind": "source.lang.swift.decl.enum", "key.description": "Optional", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "optional", "key.name": "optional", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "optional", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "OptionSet", "key.doc.brief": "Supplies convenient conformance to SetAlgebra for any type whose RawValue is a BitwiseOperations.  For example:", "key.name": "OptionSet", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps9OptionSet", "key.typename": "OptionSet", "key.kind": "source.lang.swift.decl.protocol", "key.description": "OptionSet", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "OutputStream", "key.doc.brief": "A target of text streaming operations.", "key.name": "OutputStream", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps12OutputStream", "key.typename": "OutputStream", "key.kind": "source.lang.swift.decl.protocol", "key.description": "OutputStream", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "override", "key.name": "override", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "override", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "PlaygroundQuickLook", "key.doc.brief": "The sum of types that can be used as a quick look representation.", "key.name": "PlaygroundQuickLook", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Os19PlaygroundQuickLook", "key.typename": "PlaygroundQuickLook", "key.kind": "source.lang.swift.decl.enum", "key.description": "PlaygroundQuickLook", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "postfix", "key.name": "postfix", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "postfix", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "precondition(<#T##condition: Bool##Bool#>)", "key.doc.brief": "Check a necessary condition for making forward progress.", "key.name": "precondition(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs12preconditionFTKT_SbKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "precondition(condition: Bool)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "precondition(<#T##condition: Bool##Bool#>, <#T##message: String##String#>)", "key.doc.brief": "Check a necessary condition for making forward progress.", "key.name": "precondition(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs12preconditionFTKT_SbKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "precondition(condition: Bool, message: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "preconditionFailure()", "key.doc.brief": "Indicate that a precondition was violated.", "key.name": "preconditionFailure()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs19preconditionFailureFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "preconditionFailure()", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "preconditionFailure(<#T##message: String##String#>)", "key.doc.brief": "Indicate that a precondition was violated.", "key.name": "preconditionFailure(:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs19preconditionFailureFTKT_SS4fileVs12StaticString4lineSu_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "preconditionFailure(message: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "prefix", "key.name": "prefix", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "prefix", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "print(<#T##items: Any...##Any#>)", "key.doc.brief": "Writes the textual representations of items, separated by separator and terminated by terminator, into the standard output.", "key.name": "print(:...)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs5printFTGSaP__9separatorSS10terminatorSS_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "print(items: Any...)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "print(<#T##items: Any...##Any#>, separator: <#T##String#>, terminator: <#T##String#>)", "key.doc.brief": "Writes the textual representations of items, separated by separator and terminated by terminator, into the standard output.", "key.name": "print(:...separator:terminator:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs5printFTGSaP__9separatorSS10terminatorSS_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "print(items: Any..., separator: String, terminator: String)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "print(<#T##items: Any...##Any#>, separator: <#T##String#>, terminator: <#T##String#>, to: &<#T##Target#>)", "key.doc.brief": "Writes the textual representations of items, separated by separator and terminated by terminator, into output.", "key.name": "print(:...separator:terminator:to:&)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs5printuRxs12OutputStreamrFTGSaP__9separatorSS10terminatorSS2toRx_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "print(items: Any..., separator: String, terminator: String, to: &Target)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "print(<#T##items: Any...##Any#>, to: &<#T##Target#>)", "key.doc.brief": "Writes the textual representations of items, separated by separator and terminated by terminator, into output.", "key.name": "print(:...to:&)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs5printuRxs12OutputStreamrFTGSaP__9separatorSS10terminatorSS2toRx_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "print(items: Any..., to: &Target)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "private", "key.name": "private", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "private", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Process", "key.doc.brief": "Command-line arguments for the current process.", "key.name": "Process", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Os7Process", "key.typename": "Process", "key.kind": "source.lang.swift.decl.enum", "key.description": "Process", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "protocol", "key.name": "protocol", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "protocol", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "public", "key.name": "public", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "public", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "RandomAccessIndex", "key.doc.brief": "An index that can be offset by an arbitrary number of positions, and can measure the distance to any reachable value, in O(1).", "key.name": "RandomAccessIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps17RandomAccessIndex", "key.typename": "RandomAccessIndex", "key.kind": "source.lang.swift.decl.protocol", "key.description": "RandomAccessIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Range", "key.doc.brief": "A collection of consecutive discrete index values.", "key.name": "Range", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5Range", "key.typename": "Range", "key.kind": "source.lang.swift.decl.struct", "key.description": "Range", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "RangeIterator", "key.doc.brief": "An iterator over the elements of Range<Element>.", "key.name": "RangeIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs13RangeIterator", "key.typename": "RangeIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "RangeIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "RangeReplaceableCollection", "key.doc.brief": "A collection that supports replacement of an arbitrary subrange of elements with the elements of another collection.", "key.name": "RangeReplaceableCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps26RangeReplaceableCollection", "key.typename": "RangeReplaceableCollection", "key.kind": "source.lang.swift.decl.protocol", "key.description": "RangeReplaceableCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "RawRepresentable", "key.doc.brief": "A type that can be converted to an associated \"raw\" type, then converted back to produce an instance equivalent to the original.", "key.name": "RawRepresentable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps16RawRepresentable", "key.typename": "RawRepresentable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "RawRepresentable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "readLine()", "key.doc.brief": "Returns Characters read from standard input through the end of the current line or until EOF is reached, or nil if EOF has already been reached.", "key.name": "readLine()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs8readLineFT16strippingNewlineSb_GSqSS_", "key.typename": "String?", "key.kind": "source.lang.swift.decl.function.free", "key.description": "readLine()", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "readLine(strippingNewline: <#T##Bool#>)", "key.doc.brief": "Returns Characters read from standard input through the end of the current line or until EOF is reached, or nil if EOF has already been reached.", "key.name": "readLine(strippingNewline:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs8readLineFT16strippingNewlineSb_GSqSS_", "key.typename": "String?", "key.kind": "source.lang.swift.decl.function.free", "key.description": "readLine(strippingNewline: Bool)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "repeat", "key.name": "repeat", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "repeat", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Repeated", "key.doc.brief": "A collection whose elements are all identical Elements.", "key.name": "Repeated", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs8Repeated", "key.typename": "Repeated", "key.kind": "source.lang.swift.decl.struct", "key.description": "Repeated", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "repeatElement(<#T##element: T##T#>, count: <#T##Int#>)", "key.doc.brief": "Return a collection containing n repetitions of elementInstance.", "key.name": "repeatElement(:count:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs13repeatElementurFTx5countSi_GVs8Repeatedx_", "key.typename": "Repeated<T>", "key.kind": "source.lang.swift.decl.function.free", "key.description": "repeatElement(element: T, count: Int)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "required", "key.name": "required", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "required", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "return", "key.name": "return", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "return", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "ReverseCollection", "key.doc.brief": "A Collection that presents the elements of its Base collection in reverse order.", "key.name": "ReverseCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs17ReverseCollection", "key.typename": "ReverseCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "ReverseCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ReverseIndex", "key.doc.brief": "A wrapper for a BidirectionalIndex that reverses its direction of traversal.", "key.name": "ReverseIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12ReverseIndex", "key.typename": "ReverseIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "ReverseIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ReverseIndexProtocol", "key.doc.brief": "An index that traverses the same positions as an underlying index, with inverted traversal direction.", "key.name": "ReverseIndexProtocol", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps20ReverseIndexProtocol", "key.typename": "ReverseIndexProtocol", "key.kind": "source.lang.swift.decl.protocol", "key.description": "ReverseIndexProtocol", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ReverseRandomAccessCollection", "key.doc.brief": "A Collection that presents the elements of its Base collection in reverse order.", "key.name": "ReverseRandomAccessCollection", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs29ReverseRandomAccessCollection", "key.typename": "ReverseRandomAccessCollection", "key.kind": "source.lang.swift.decl.struct", "key.description": "ReverseRandomAccessCollection", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "ReverseRandomAccessIndex", "key.doc.brief": "A wrapper for a RandomAccessIndex that reverses its direction of traversal.", "key.name": "ReverseRandomAccessIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs24ReverseRandomAccessIndex", "key.typename": "ReverseRandomAccessIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "ReverseRandomAccessIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Sequence", "key.doc.brief": "A type that can be iterated with a for...in loop.", "key.name": "Sequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps8Sequence", "key.typename": "Sequence", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Sequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Set", "key.doc.brief": "A collection of unique Element instances.", "key.name": "Set", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs3Set", "key.typename": "Set", "key.kind": "source.lang.swift.decl.struct", "key.description": "Set", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "SetAlgebra", "key.doc.brief": "A generalized set whose distinct elements are not necessarily disjoint.", "key.name": "SetAlgebra", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10SetAlgebra", "key.typename": "SetAlgebra", "key.kind": "source.lang.swift.decl.protocol", "key.description": "SetAlgebra", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "SetIndex", "key.doc.brief": "Used to access the members in an instance of Set<Element>.", "key.name": "SetIndex", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs8SetIndex", "key.typename": "SetIndex", "key.kind": "source.lang.swift.decl.struct", "key.description": "SetIndex", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "SetIterator", "key.doc.brief": "An iterator over the members of a Set<Element>.", "key.name": "SetIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs11SetIterator", "key.typename": "SetIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "SetIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "SignedInteger", "key.doc.brief": "A set of common requirements for Swift's signed integer types.", "key.name": "SignedInteger", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps13SignedInteger", "key.typename": "SignedInteger", "key.kind": "source.lang.swift.decl.protocol", "key.description": "SignedInteger", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "SignedNumber", "key.doc.brief": "Instances of conforming types can be subtracted, arithmetically negated, and initialized from 0.", "key.name": "SignedNumber", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps12SignedNumber", "key.typename": "SignedNumber", "key.kind": "source.lang.swift.decl.protocol", "key.description": "SignedNumber", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "sizeof(<#T##T.Type#>)", "key.doc.brief": "Returns the contiguous memory footprint of T.", "key.name": "sizeof()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs6sizeofurFMxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "sizeof(T.Type)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "sizeofValue(<#T##T#>)", "key.doc.brief": "Returns the contiguous memory footprint of  T.", "key.name": "sizeofValue()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs11sizeofValueurFxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "sizeofValue(T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Slice", "key.doc.brief": "A view into a sub-sequence of elements of another collection.", "key.name": "Slice", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5Slice", "key.typename": "Slice", "key.kind": "source.lang.swift.decl.struct", "key.description": "Slice", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "static", "key.name": "static", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "static", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "StaticString", "key.doc.brief": "A simple string designed to represent text that is \"knowable at compile-time\".", "key.name": "StaticString", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12StaticString", "key.typename": "StaticString", "key.kind": "source.lang.swift.decl.struct", "key.description": "StaticString", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Streamable", "key.doc.brief": "A source of text streaming operations.  Streamable instances can be written to any output stream.", "key.name": "Streamable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10Streamable", "key.typename": "Streamable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Streamable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "stride(from: <#T##T#>, through: <#T##T#>, by: <#T##T.Stride#>)", "key.doc.brief": "Returns the sequence of values (self, self + stride, self + stride + stride, ... last) where last is the last value in the progression less than or equal to end.", "key.name": "stride(from:through:by:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs6strideuRxs10StrideablerFT4fromx7throughx2bywx6Stride_GVs13StrideThroughx_", "key.typename": "StrideThrough<T>", "key.kind": "source.lang.swift.decl.function.free", "key.description": "stride(from: T, through: T, by: T.Stride)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "stride(from: <#T##T#>, to: <#T##T#>, by: <#T##T.Stride#>)", "key.doc.brief": "Returns the sequence of values (self, self + stride, self + stride + stride, ... last) where last is the last value in the progression that is less than end.", "key.name": "stride(from:to:by:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs6strideuRxs10StrideablerFT4fromx2tox2bywx6Stride_GVs8StrideTox_", "key.typename": "StrideTo<T>", "key.kind": "source.lang.swift.decl.function.free", "key.description": "stride(from: T, to: T, by: T.Stride)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Strideable", "key.doc.brief": "Conforming types are notionally continuous, one-dimensional values that can be offset and measured.", "key.name": "Strideable", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps10Strideable", "key.typename": "Strideable", "key.kind": "source.lang.swift.decl.protocol", "key.description": "Strideable", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "strideof(<#T##T.Type#>)", "key.doc.brief": "Returns the least possible interval between distinct instances of T in memory.  The result is always positive.", "key.name": "strideof()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs8strideofurFMxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "strideof(T.Type)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "strideofValue(<#T##T#>)", "key.doc.brief": "Returns the least possible interval between distinct instances of T in memory.  The result is always positive.", "key.name": "strideofValue()", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs13strideofValueurFxSi", "key.typename": "Int", "key.kind": "source.lang.swift.decl.function.free", "key.description": "strideofValue(T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StrideThrough", "key.doc.brief": "A Sequence of values formed by striding over a closed interval.", "key.name": "StrideThrough", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs13StrideThrough", "key.typename": "StrideThrough", "key.kind": "source.lang.swift.decl.struct", "key.description": "StrideThrough", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StrideThroughIterator", "key.doc.brief": "An IteratorProtocol for StrideThrough<Element>.", "key.name": "StrideThroughIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs21StrideThroughIterator", "key.typename": "StrideThroughIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "StrideThroughIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StrideTo", "key.doc.brief": "A Sequence of values formed by striding over a half-open interval.", "key.name": "StrideTo", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs8StrideTo", "key.typename": "StrideTo", "key.kind": "source.lang.swift.decl.struct", "key.description": "StrideTo", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StrideToIterator", "key.doc.brief": "An iterator for the result of stride(to:...).", "key.name": "StrideToIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs16StrideToIterator", "key.typename": "StrideToIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "StrideToIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "String", "key.doc.brief": "An arbitrary Unicode string value.", "key.name": "String", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:SS", "key.typename": "String", "key.kind": "source.lang.swift.decl.struct", "key.description": "String", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StringInterpolationConvertible", "key.doc.brief": "Conforming types can be initialized with string interpolations containing \\(...) clauses.", "key.name": "StringInterpolationConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps30StringInterpolationConvertible", "key.typename": "StringInterpolationConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "StringInterpolationConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StringLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with arbitrary string literals.", "key.name": "StringLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps24StringLiteralConvertible", "key.typename": "StringLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "StringLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "StringLiteralType", "key.doc.brief": "The default type for an otherwise-unconstrained string literal.", "key.name": "StringLiteralType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s17StringLiteralType", "key.typename": "String", "key.kind": "source.lang.swift.decl.typealias", "key.description": "StringLiteralType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "struct", "key.name": "struct", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "struct", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "subscript", "key.name": "subscript", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "subscript", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "swap(&<#T##a: T##T#>, &<#T##b: T##T#>)", "key.doc.brief": "Exchange the values of a and b.", "key.name": "swap(&:&:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs4swapurFTRxRx_T_", "key.typename": "Void", "key.kind": "source.lang.swift.decl.function.free", "key.description": "swap(&a: T, &b: T)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "switch", "key.name": "switch", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "switch", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "throw", "key.name": "throw", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "throw", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "transcode(<#T##input: Input##Input#>, from: <#T##InputEncoding.Type#>, to: <#T##OutputEncoding.Type#>, stoppingOnError: <#T##Bool#>, sendingOutputTo: <#T##(OutputEncoding.CodeUnit) -> Void#>)", "key.doc.brief": "Translate input, in the given InputEncoding, into processCodeUnit, in the given OutputEncoding.", "key.name": "transcode(:from:to:stoppingOnError:sendingOutputTo:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs9transcodeu1_Rxs16IteratorProtocol_s12UnicodeCodec0_S0_wx7Elementzw_8CodeUnitrFTx4fromMq_2toMq0_15stoppingOnErrorSb15sendingOutputToFw0_S2_T__Sb", "key.typename": "Bool", "key.kind": "source.lang.swift.decl.function.free", "key.description": "transcode(input: Input, from: InputEncoding.Type, to: OutputEncoding.Type, stoppingOnError: Bool, sendingOutputTo: (OutputEncoding.CodeUnit) -> Void)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "true", "key.name": "true", "key.context": "source.codecompletion.context.none", "key.typename": "Bool", "key.kind": "source.lang.swift.keyword", "key.description": "true", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "try", "key.name": "try", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "try", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "try!", "key.name": "try!", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "try!", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "try?", "key.name": "try?", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "try?", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "typealias", "key.name": "typealias", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "typealias", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "UInt", "key.doc.brief": "A 64-bit unsigned integer value type.", "key.name": "UInt", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Su", "key.typename": "UInt", "key.kind": "source.lang.swift.decl.struct", "key.description": "UInt", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UInt16", "key.doc.brief": "A 16-bit unsigned integer value type.", "key.name": "UInt16", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs6UInt16", "key.typename": "UInt16", "key.kind": "source.lang.swift.decl.struct", "key.description": "UInt16", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UInt32", "key.doc.brief": "A 32-bit unsigned integer value type.", "key.name": "UInt32", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs6UInt32", "key.typename": "UInt32", "key.kind": "source.lang.swift.decl.struct", "key.description": "UInt32", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UInt64", "key.doc.brief": "A 64-bit unsigned integer value type.", "key.name": "UInt64", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs6UInt64", "key.typename": "UInt64", "key.kind": "source.lang.swift.decl.struct", "key.description": "UInt64", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UInt8", "key.doc.brief": "An 8-bit unsigned integer value type.", "key.name": "UInt8", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5UInt8", "key.typename": "UInt8", "key.kind": "source.lang.swift.decl.struct", "key.description": "UInt8", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UIntMax", "key.doc.brief": "The largest native unsigned integer type.", "key.name": "UIntMax", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s7UIntMax", "key.typename": "UInt64", "key.kind": "source.lang.swift.decl.typealias", "key.description": "UIntMax", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnicodeCodec", "key.doc.brief": "A Unicode encoding scheme.", "key.name": "UnicodeCodec", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps12UnicodeCodec", "key.typename": "UnicodeCodec", "key.kind": "source.lang.swift.decl.protocol", "key.description": "UnicodeCodec", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnicodeDecodingResult", "key.doc.brief": "The result of one Unicode decoding step.", "key.name": "UnicodeDecodingResult", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Os21UnicodeDecodingResult", "key.typename": "UnicodeDecodingResult", "key.kind": "source.lang.swift.decl.enum", "key.description": "UnicodeDecodingResult", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnicodeScalar", "key.doc.brief": "A Unicode scalar value.", "key.name": "UnicodeScalar", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sc", "key.typename": "UnicodeScalar", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnicodeScalar", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnicodeScalarLiteralConvertible", "key.doc.brief": "Conforming types can be initialized with string literals containing a single Unicode scalar value.", "key.name": "UnicodeScalarLiteralConvertible", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps31UnicodeScalarLiteralConvertible", "key.typename": "UnicodeScalarLiteralConvertible", "key.kind": "source.lang.swift.decl.protocol", "key.description": "UnicodeScalarLiteralConvertible", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnicodeScalarType", "key.doc.brief": "The default type for an otherwise-unconstrained unicode scalar literal.", "key.name": "UnicodeScalarType", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s17UnicodeScalarType", "key.typename": "String", "key.kind": "source.lang.swift.decl.typealias", "key.description": "UnicodeScalarType", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Unmanaged", "key.doc.brief": "A type for propagating an unmanaged object reference.", "key.name": "Unmanaged", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs9Unmanaged", "key.typename": "Unmanaged", "key.kind": "source.lang.swift.decl.struct", "key.description": "Unmanaged", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "unowned", "key.name": "unowned", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "unowned", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "unsafeAddress(of: <#T##AnyObject#>)", "key.doc.brief": "Returns an UnsafePointer to the storage used for object.  There's not much you can do with this other than use it to identify the object.", "key.name": "unsafeAddress(of:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs13unsafeAddressFT2ofPs9AnyObject__GSPT__", "key.typename": "UnsafePointer<Void>", "key.kind": "source.lang.swift.decl.function.free", "key.description": "unsafeAddress(of: AnyObject)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "unsafeBitCast(<#T##x: T##T#>, to: <#T##U.Type#>)", "key.doc.brief": "Returns the bits of x, interpreted as having type U.", "key.name": "unsafeBitCast(:to:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs13unsafeBitCastu0_rFTx2toMq__q_", "key.typename": "U", "key.kind": "source.lang.swift.decl.function.free", "key.description": "unsafeBitCast(x: T, to: U.Type)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnsafeBufferPointer", "key.doc.brief": "A non-owning pointer to buffer of  Elements stored contiguously in memory, presenting a Collection interface to the underlying elements.", "key.name": "UnsafeBufferPointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:SR", "key.typename": "UnsafeBufferPointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnsafeBufferPointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnsafeBufferPointerIterator", "key.doc.brief": "An iterator for the elements in the buffer referenced by UnsafeBufferPointer or UnsafeMutableBufferPointer.", "key.name": "UnsafeBufferPointerIterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs27UnsafeBufferPointerIterator", "key.typename": "UnsafeBufferPointerIterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnsafeBufferPointerIterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "unsafeDowncast(<#T##x: AnyObject##AnyObject#>, to: <#T##T.Type#>)", "key.modulename": "Swift", "key.name": "unsafeDowncast(:to:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs14unsafeDowncastuRxs9AnyObjectrFTPS__2toMx_x", "key.typename": "T", "key.kind": "source.lang.swift.decl.function.free", "key.description": "unsafeDowncast(x: AnyObject, to: T.Type)", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "UnsafeMutableBufferPointer", "key.doc.brief": "A non-owning pointer to buffer of mutable Elements stored contiguously in memory, presenting a Collection interface to the underlying elements.", "key.name": "UnsafeMutableBufferPointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sr", "key.typename": "UnsafeMutableBufferPointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnsafeMutableBufferPointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnsafeMutablePointer", "key.doc.brief": "A raw pointer for accessing data of type Pointee.  This type provides no automated memory management, and therefore must be handled with great care to ensure safety.", "key.name": "UnsafeMutablePointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Sp", "key.typename": "UnsafeMutablePointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnsafeMutablePointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnsafePointer", "key.doc.brief": "A raw pointer for accessing data of type Pointee.  This type provides no automated memory management, and therefore must be handled with great care to ensure safety.", "key.name": "UnsafePointer", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:SP", "key.typename": "UnsafePointer", "key.kind": "source.lang.swift.decl.struct", "key.description": "UnsafePointer", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UnsignedInteger", "key.doc.brief": "A set of common requirements for Swift's unsigned integer types.", "key.name": "UnsignedInteger", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Ps15UnsignedInteger", "key.typename": "UnsignedInteger", "key.kind": "source.lang.swift.decl.protocol", "key.description": "UnsignedInteger", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UTF16", "key.doc.brief": "A codec for UTF-16.", "key.name": "UTF16", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5UTF16", "key.typename": "UTF16", "key.kind": "source.lang.swift.decl.struct", "key.description": "UTF16", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UTF32", "key.doc.brief": "A codec for UTF-32.", "key.name": "UTF32", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs5UTF32", "key.typename": "UTF32", "key.kind": "source.lang.swift.decl.struct", "key.description": "UTF32", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "UTF8", "key.doc.brief": "A codec for UTF-8.", "key.name": "UTF8", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs4UTF8", "key.typename": "UTF8", "key.kind": "source.lang.swift.decl.struct", "key.description": "UTF8", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "var", "key.name": "var", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "var", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "Void", "key.doc.brief": "The empty tuple type.", "key.name": "Void", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:s4Void", "key.typename": "Void", "key.kind": "source.lang.swift.decl.typealias", "key.description": "Void", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "weak", "key.name": "weak", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "weak", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "where", "key.name": "where", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "where", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "while", "key.name": "while", "key.context": "source.codecompletion.context.none", "key.typename": "", "key.kind": "source.lang.swift.keyword", "key.description": "while", "key.num_bytes_to_erase": 0}, {"key.sourcetext": "withExtendedLifetime(<#T##x: T##T#>, <#T##f: () throws -> Result##() throws -> Result#>)", "key.doc.brief": "Evaluate f() and return its result, ensuring that x is not destroyed before f returns.", "key.name": "withExtendedLifetime(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs20withExtendedLifetimeu0_rFzTxFzT_q__q_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withExtendedLifetime(x: T, f: () throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withExtendedLifetime(<#T##x: T##T#>, <#T##f: (T) throws -> Result##(T) throws -> Result#>)", "key.doc.brief": "Evaluate f(x) and return its result, ensuring that x is not destroyed before f returns.", "key.name": "withExtendedLifetime(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs20withExtendedLifetimeu0_rFzTxFzxq__q_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withExtendedLifetime(x: T, f: (T) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafeMutablePointer(&<#T##arg: T##T#>, <#T##body: (UnsafeMutablePointer<T>) throws -> Result##(UnsafeMutablePointer<T>) throws -> Result#>)", "key.doc.brief": "Invokes body with an UnsafeMutablePointer to arg and returns the result. Useful for calling Objective-C APIs that take \"in/out\" parameters (and default-constructible \"out\" parameters) by pointer.", "key.name": "withUnsafeMutablePointer(&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs24withUnsafeMutablePointeru0_rFzTRxFzGSpx_q__q_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafeMutablePointer(&arg: T, body: (UnsafeMutablePointer<T>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafeMutablePointers(&<#T##arg0: A0##A0#>, &<#T##arg1: A1##A1#>, &<#T##arg2: A2##A2#>, <#T##body: (UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>, UnsafeMutablePointer<A2>) throws -> Result##(UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>, UnsafeMutablePointer<A2>) throws -> Result#>)", "key.doc.brief": "Like withUnsafeMutablePointer, but passes pointers to arg0, arg1, and arg2.", "key.name": "withUnsafeMutablePointers(&:&:&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs25withUnsafeMutablePointersu2_rFzTRxRq_Rq0_FzTGSpx_GSpq__GSpq0___q1__q1_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafeMutablePointers(&arg0: A0, &arg1: A1, &arg2: A2, body: (UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>, UnsafeMutablePointer<A2>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafeMutablePointers(&<#T##arg0: A0##A0#>, &<#T##arg1: A1##A1#>, <#T##body: (UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>) throws -> Result##(UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>) throws -> Result#>)", "key.doc.brief": "Like withUnsafeMutablePointer, but passes pointers to arg0 and arg1.", "key.name": "withUnsafeMutablePointers(&:&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs25withUnsafeMutablePointersu1_rFzTRxRq_FzTGSpx_GSpq___q0__q0_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafeMutablePointers(&arg0: A0, &arg1: A1, body: (UnsafeMutablePointer<A0>, UnsafeMutablePointer<A1>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafePointer(&<#T##arg: T##T#>, <#T##body: (UnsafePointer<T>) throws -> Result##(UnsafePointer<T>) throws -> Result#>)", "key.doc.brief": "Invokes body with an UnsafePointer to arg and returns the result. Useful for calling Objective-C APIs that take \"in/out\" parameters (and default-constructible \"out\" parameters) by pointer.", "key.name": "withUnsafePointer(&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs17withUnsafePointeru0_rFzTRxFzGSPx_q__q_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafePointer(&arg: T, body: (UnsafePointer<T>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafePointers(&<#T##arg0: A0##A0#>, &<#T##arg1: A1##A1#>, &<#T##arg2: A2##A2#>, <#T##body: (UnsafePointer<A0>, UnsafePointer<A1>, UnsafePointer<A2>) throws -> Result##(UnsafePointer<A0>, UnsafePointer<A1>, UnsafePointer<A2>) throws -> Result#>)", "key.doc.brief": "Like withUnsafePointer, but passes pointers to arg0, arg1, and arg2.", "key.name": "withUnsafePointers(&:&:&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs18withUnsafePointersu2_rFzTRxRq_Rq0_FzTGSPx_GSPq__GSPq0___q1__q1_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafePointers(&arg0: A0, &arg1: A1, &arg2: A2, body: (UnsafePointer<A0>, UnsafePointer<A1>, UnsafePointer<A2>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withUnsafePointers(&<#T##arg0: A0##A0#>, &<#T##arg1: A1##A1#>, <#T##body: (UnsafePointer<A0>, UnsafePointer<A1>) throws -> Result##(UnsafePointer<A0>, UnsafePointer<A1>) throws -> Result#>)", "key.doc.brief": "Like withUnsafePointer, but passes pointers to arg0 and arg1.", "key.name": "withUnsafePointers(&:&::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs18withUnsafePointersu1_rFzTRxRq_FzTGSPx_GSPq___q0__q0_", "key.typename": "Result", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withUnsafePointers(&arg0: A0, &arg1: A1, body: (UnsafePointer<A0>, UnsafePointer<A1>) throws -> Result) rethrows", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "withVaList(<#T##args: [CVarArg]##[CVarArg]#>, invoke: <#T##CVaListPointer -> R#>)", "key.doc.brief": "Invoke body with a C va_list argument derived from args.", "key.name": "withVaList(:invoke:)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs10withVaListurFTGSaPs7CVarArg__6invokeFVs14CVaListPointerx_x", "key.typename": "R", "key.kind": "source.lang.swift.decl.function.free", "key.description": "withVaList(args: [CVarArg], invoke: CVaListPointer -> R)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "zip(<#T##sequence1: Sequence1##Sequence1#>, <#T##sequence2: Sequence2##Sequence2#>)", "key.doc.brief": "A sequence of pairs built out of two underlying sequences, where the elements of the ith pair are the ith elements of each underlying sequence.", "key.name": "zip(::)", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Fs3zipu0_Rxs8Sequence_S_rFTxq__GVs12Zip2Sequencexq__", "key.typename": "Zip2Sequence<Sequence1, Sequence2>", "key.kind": "source.lang.swift.decl.function.free", "key.description": "zip(sequence1: Sequence1, sequence2: Sequence2)", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Zip2Iterator", "key.doc.brief": "An iterator for Zip2Sequence.", "key.name": "Zip2Iterator", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12Zip2Iterator", "key.typename": "Zip2Iterator", "key.kind": "source.lang.swift.decl.struct", "key.description": "Zip2Iterator", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}, {"key.sourcetext": "Zip2Sequence", "key.doc.brief": "A sequence of pairs built out of two underlying sequences, where the elements of the ith pair are the ith elements of each underlying sequence.", "key.name": "Zip2Sequence", "key.context": "source.codecompletion.context.othermodule", "key.associated_usrs": "s:Vs12Zip2Sequence", "key.typename": "Zip2Sequence", "key.kind": "source.lang.swift.decl.struct", "key.description": "Zip2Sequence", "key.num_bytes_to_erase": 0, "key.modulename": "Swift"}]}